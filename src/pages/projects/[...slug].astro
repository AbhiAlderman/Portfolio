---
import { getCollection, render } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { YouTube } from "astro-embed";
import Link from "../../components/Links.astro"

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}

const post = Astro.props;
const { Content } = await render(post);
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <main>
    <article class="prose mx-auto dark:prose-invert">
      <div class="not-prose mb-8 text-center">
        <h1 class="text-1.8xl font-bold tracking-tight md:text-2xl lg:text-3xl">
          {post.data.title}
        </h1>
      <div class="mt-4 max-w-4xl mx-auto">
        <img
          src={post.data.cover.src}
          alt={post.data.coverAlt}
          class="h-full w-full object-cover"
          width={post.data.cover.width}
          height={post.data.cover.height}
          loading="lazy"
        />
      </div>
      <div class="mt-4 flex flex-wrap justify-center gap-2 prose-a:no-underline">
        {
          post.data.tags.map((tag) => (
            <span class="badge badge-outline badge-md">
              <a href={`/tags/${tag}/1/`}>{tag}</a>
            </span>
          ))
        }
      </div>
      {post.data.externalLinks && post.data.externalLinks.length > 0 && (
        <div
          class="w-full grid my-4"
          style={`grid-template-columns: repeat(${post.data.externalLinks.length}, auto); gap: 1rem; justify-content: center;`}
        >
          {post.data.externalLinks.map((link) => (
            <Link
              href={link.link}
              class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 text-center"
            >
              {link.title}
            </Link>
          ))}
        </div>
      )}
      <div class="mt-4 justify-center markdown-content" id="post-content">
        <Content />
      </div>
      {post.data.youtubePairs && post.data.youtubePairs.length > 0 && (
        <div class="youtube-pairs my-6">
          {post.data.youtubePairs.map((pair) => (
          <div class="youtube-video my-4">
            <h3 class="text-xl font-bold mb-2 text-center">{pair.title}</h3>
            <div class="justify-center">
              <YouTube id={pair.link} class="mx-auto" />
            </div>
          </div>
        ))}
        </div>
      )}
    </article>
  </main>
</BaseLayout>

<style is:global>
  #post-content img {
    display: block !important;
    margin: 0 auto !important;
    max-width: 80%;
    height: auto;
    padding: 20px 0;
  }
</style>